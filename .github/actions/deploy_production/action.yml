name: 'Deploy to production'
description: ''

inputs:
  app_name:
    description: 'The name of the app'
    required: true
  app_config_override:
    description: 'Override the path to the app config for onchain apps'
    required: false
  stack:
    description: 'The name of the CDK stack'
    required: true
  custom_cache_key_suffix:
    description: 'Optional, custom cache key suffix.'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4.x
      with:
        short-length: 7 # this should match the short-length in the build_docker_image action

    # we need to bring back node_modules which includes tsconfig-paths which is used by CDK files
    - name: Install dependencies
      uses: ./.github/actions/install
      with:
        app_name: ${{ inputs.app_name }}
        custom_cache_key_suffix: ${{ inputs.custom_cache_key_suffix }}
    - name: Setup production config
      shell: bash
      # Note: "2>/dev/null || :" is a bash idiom that means "if the previous command fails, do nothing"
      run: |
        cp apps/${{ inputs.app_config_override || inputs.app_name }}/.env.ebstalk .env.ebstalk
        cp -r apps/${{ inputs.app_config_override || inputs.app_name }}/.ebextensions .ebextensions
        cp -r apps/${{ inputs.app_config_override || inputs.app_name }}/.platform/* .platform/ 2>/dev/null || :
        cp apps/${{ inputs.app_config_override || inputs.app_name }}/cron.yml cron.yaml 2>/dev/null || :

    - name: Set the docker compose env variables
      uses: mikefarah/yq@master
      with:
        cmd: |
          yq -I 4 -i '
            with(.option_settings."aws:elasticbeanstalk:application:environment";
                  .IMGTAG = "${{ github.run_id }}-${{ env.GITHUB_SHA_SHORT }}")
            ' .ebextensions/00_env_vars.config

    - name: Calculate Build ID
      shell: bash
      run: |
        build_id=${{ hashFiles(format('apps/{0}/*.ts', inputs.app_name), format('apps/{0}/*.tsx', inputs.app_name)) }}
        echo $'\nREACT_APP_BUILD_ID='$build_id >> .env.ebstalk

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Package and deploy
      shell: bash
      run: |
        cat files_to_zip.txt | zip --symlinks -r@ ${{ inputs.stack }}.zip
        npx aws-cdk deploy --method=direct -c name=${{ inputs.stack }}
